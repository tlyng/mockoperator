// Code generated by MockGen. DO NOT EDIT.
// Source: ../interfaces.go

// Package component_mocks is a generated GoMock package.
package component_mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockManipulator is a mock of Manipulator interface
type MockManipulator struct {
	ctrl     *gomock.Controller
	recorder *MockManipulatorMockRecorder
}

// MockManipulatorMockRecorder is the mock recorder for MockManipulator
type MockManipulatorMockRecorder struct {
	mock *MockManipulator
}

// NewMockManipulator creates a new mock instance
func NewMockManipulator(ctrl *gomock.Controller) *MockManipulator {
	mock := &MockManipulator{ctrl: ctrl}
	mock.recorder = &MockManipulatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManipulator) EXPECT() *MockManipulatorMockRecorder {
	return m.recorder
}

// Manipulate mocks base method
func (m *MockManipulator) Manipulate(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Manipulate", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Manipulate indicates an expected call of Manipulate
func (mr *MockManipulatorMockRecorder) Manipulate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Manipulate", reflect.TypeOf((*MockManipulator)(nil).Manipulate), arg0)
}
